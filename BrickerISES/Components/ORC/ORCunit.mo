within BrickerISES.Components.ORC;
model ORCunit
  extends Icons.ORC_unit;
  import Modelica.SIunits;
replaceable package MediumSf =
      ThermoCycle.Media.Incompressible.IncompressibleTables.TherminolSP constrainedby
    Modelica.Media.Interfaces.PartialMedium
    "Medium model secondary fluid - Incompressible Fluid"                                                                                                     annotation (choicesAllMatching = true);
    replaceable package MediumCf = ExternalMedia.Examples.WaterCoolProp constrainedby
    Modelica.Media.Interfaces.PartialMedium "Medium model working fluid"                                                             annotation (choicesAllMatching = true);

    /******* Ports *****/
  ThermoCycle.Interfaces.Fluid.FlangeA InFlowSf( redeclare package Medium = MediumSf)
    annotation (Placement(transformation(extent={{-112,14},{-92,34}}),
        iconTransformation(extent={{-112,14},{-92,34}})));
  ThermoCycle.Interfaces.Fluid.FlangeB OutFlowSf(redeclare package Medium = MediumSf)
    annotation (Placement(transformation(extent={{-112,-46},{-92,-26}}),
        iconTransformation(extent={{-112,-46},{-92,-26}})));
ThermoCycle.Interfaces.Fluid.FlangeA InFlowCf(redeclare package Medium = MediumCf)
    annotation (Placement(transformation(extent={{32,50},{52,70}}),
        iconTransformation(extent={{32,50},{52,70}})));
ThermoCycle.Interfaces.Fluid.FlangeB OutFlowCf(  redeclare package Medium = MediumCf)
    annotation (Placement(transformation(extent={{32,-82},{52,-62}}),
        iconTransformation(extent={{32,-82},{52,-62}})));
/***** Parameters *******/
parameter Boolean Set_pSf = false "Set true to impose secondary fluid pressure"
                                                                                annotation (Dialog(group = "Secondary fluid"));
parameter Boolean Set_pCf = false "Set true to impose cooling fluid pressure" annotation (Dialog(group = "Cooling fluid"));
parameter Modelica.SIunits.Pressure pConstSf= 1e5 "Const p Sf" annotation (Dialog(enable= Set_pSf,group = "Secondary fluid"));
parameter Modelica.SIunits.Pressure pConstCf= 1e5 "Const p Cf" annotation (Dialog(enable= Set_pCf,group = "Cooling fluid"));
parameter SIunits.Temperature T_sf_su_start = 250 + 273.15;
SIunits.Pressure pp "pressure secondary fluid";
SIunits.Pressure pCf "pressure cooling fluid";

/* Set thermodynamic states */
MediumSf.ThermodynamicState Sfsu = MediumSf.setState_ph(pp,h_sf_su)
    "Sfsu: Evaporator inlet";
MediumSf.ThermodynamicState Sfex = MediumSf.setState_pT(pp,T_sf_ex_filtered)
    "Sfex: Evaporator outlet";
MediumCf.ThermodynamicState Cfsu = MediumCf.setState_ph(pCf,h_cf_su)
    "Cfsu: Condenser inlet";
MediumCf.ThermodynamicState Cfex = MediumCf.setState_pT(pCf,T_cf_ex)
    "Cfex: Condenser outlet";

SIunits.MassFlowRate m_sf "Secondary fluid mass flow";
SIunits.Temperature T_sf_su(start = T_sf_su_start)
    "Temperature - Evaporator inlet secondary fluid ";
    SIunits.Temperature T_sf_ex
    "Temperatyre - Evaporator outlet secondary fluid";
    SIunits.Temperature T_sf_ex_filtered
    "Temperatyre - Evaporator outlet secondary fluid";
SIunits.SpecificEnthalpy h_sf_su
    "Specific enthalpy - Evaporator inlet secondary fluid";
SIunits.SpecificEnthalpy h_sf_ex
    "Specific enthalpy - Evaporator outlet secondary fluid";

SIunits.MassFlowRate m_cf "Cooling fluid mass flow";
SIunits.Temperature T_cf_su "Condenser inlet secondary fluid temperature";
SIunits.Temperature T_cf_ex "Condenser outlet secondary fluid temperature";
SIunits.SpecificEnthalpy h_cf_su
    "Specific enthalpy - Evaporator inlet cooling fluid";
SIunits.SpecificEnthalpy h_cf_ex
    "Specific enthalpy - Evaporator outlet cooling fluid";

SIunits.Power Pel_gross "Electrical power generated by the ORC Unit - Rank";
SIunits.Power Pth_SfRank "Thermal power of evaporator secondary fluid - Rank";
SIunits.Power Pth_CfRank "Thermal power of condenser secondary fluid - Rank";
parameter Real T_filter = 5;
parameter Real A_filter = 1.1;

equation
  if Set_pSf then
    pp = pConstSf;
  end if;
  if Set_pCf then
    pCf = pConstCf;
  end if;
  T_sf_su = MediumSf.temperature(Sfsu);
  T_sf_ex=(-3.81754317E+02-8.36761478E-02*T_cf_su-2.64438366E-03*T_cf_su^2+1.36070497E+00*T_sf_su-2.83811177E-03*T_sf_su^2+5.39953052E-03*T_cf_su*T_sf_su)+273.15 -100; /*from Rank */
  der(T_sf_ex_filtered) = (A_filter*T_sf_ex - T_sf_ex_filtered)/T_filter;
  h_sf_ex = MediumSf.specificEnthalpy(Sfex);

  T_cf_su = MediumCf.temperature(Cfsu);
  T_cf_ex=(-6.97217711E+01-1.04216811E-01*T_cf_su-4.13329503E-05*T_cf_su^2+1.21112561E-01*T_sf_su-4.31562956E-05*T_sf_su^2+7.45462310E-04*T_cf_su*T_sf_su)+273.15;        /*from Rank */
  h_cf_ex = MediumCf.specificEnthalpy(Cfex);

  Pel_gross=3.50023941E+02+1.78363865E-01*T_cf_su+2.73921968E-03*T_cf_su^2-1.52334799E+00*T_sf_su+4.29020532E-03*T_sf_su^2-5.82324751E-03*T_cf_su*T_sf_su; /*from Rank */
  Pth_SfRank=1.07263808E+03-8.28851563E-01*T_cf_su+1.12637224E-02*T_cf_su^2-4.33581774E+00*T_sf_su+1.24455582E-02*T_sf_su^2-1.55675521E-02*T_cf_su*T_sf_su; /*from Rank */
  Pth_CfRank=5.50172587E+02+4.14338074E-01*T_cf_su+6.76291805E-03*T_cf_su^2-2.68956889E+00*T_sf_su+9.31672163E-03*T_sf_su^2-1.26345843E-02*T_cf_su*T_sf_su; /*from Rank */

/* Boundaries and connections */
m_sf = InFlowSf.m_flow;
m_sf = -OutFlowSf.m_flow;

pp = InFlowSf.p;
pp = OutFlowSf.p;

h_sf_su = InFlowSf.h_outflow;
h_sf_su  = inStream(InFlowSf.h_outflow);
h_sf_ex = OutFlowSf.h_outflow;

m_cf = InFlowCf.m_flow;
m_cf = -OutFlowCf.m_flow;

pCf = InFlowCf.p;
pCf = OutFlowCf.p;

h_cf_su = InFlowCf.h_outflow;
h_cf_su  = inStream(InFlowCf.h_outflow);
h_cf_ex = OutFlowCf.h_outflow;

  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
            {40,80}}),  graphics={
        Text(
          extent={{-102,22},{-56,12}},
          lineColor={255,0,0},
          fontSize=47,
          textString="Sfsu"),
        Text(
          extent={{-6,60},{40,50}},
          lineColor={0,0,255},
          fontSize=45,
          textString="Cfsu"),
        Text(
          extent={{-2,-52},{44,-62}},
          lineColor={0,0,255},
          fontSize=44,
          textString="Cfex"),
        Text(
          extent={{-106,-46},{-60,-56}},
          lineColor={255,0,0},
          fontSize=46,
          textString="Sfex")}),    Diagram(coordinateSystem(preserveAspectRatio=false,
                  extent={{-100,-100},{40,100}}),  graphics));
end ORCunit;
