within BrickerISES.Components;
model ORC_Unit
  extends Icons.ORC_unit;

replaceable package Medium =
      ThermoCycle.Media.Incompressible.IncompressibleTables.TherminolSP constrainedby
    Modelica.Media.Interfaces.PartialMedium
    "Medium model - Incompressible Fluid"                                                                                                     annotation (choicesAllMatching = true);

/******* Ports *****/
  ThermoCycle.Interfaces.Fluid.FlangeA InFlow( redeclare package Medium = Medium)
    annotation (Placement(transformation(extent={{-106,72},{-86,92}})));
  ThermoCycle.Interfaces.Fluid.FlangeB OutFlow(redeclare package Medium = Medium)
    annotation (Placement(transformation(extent={{-108,-90},{-88,-70}})));

/***** Parameters *******/
parameter Modelica.SIunits.Temperature T_oil_ex = 150 + 273.15
    "Outlet oil temperature";
parameter Modelica.SIunits.Pressure p_start;
final parameter Modelica.SIunits.SpecificEnthalpy h_oil_ex = Medium.specificEnthalpy_pTX(p_start,T_oil_ex,fill(0,0));

parameter Boolean Cogen = false;
//Modelica.SIunits.MassFlowRate Mdot "Mass of the thermal oil";
Modelica.SIunits.Power P_el "Electrical power generated by the ORC Unit";
//Modelica.SIunits.Pressure p(start = p_start);
Medium.ThermodynamicState  fluidState;
Modelica.SIunits.SpecificEnthalpy h_oil_su "Specific enthalpy at the inlet";
Modelica.SIunits.Temperature T_oil_su "Inlet oil temperature";

equation
  fluidState = Medium.setState_ph(InFlow.p,h_oil_su);
  if Cogen then
   P_el = 60*1E03;
  else
   P_el = (1.75*T_oil_su - 806.76)*1E03;
  end if;

T_oil_su = Medium.temperature(fluidState);

//p = 150000;
/* Boundary conditions */

//   /* pressures */
 //   p = OutFlow.p;
 //   InFlow.p = p;

InFlow.p =OutFlow.p;

/*Mass Flow*/
OutFlow.m_flow= InFlow.m_flow;

/*** Enthalpy ****/
h_oil_su = inStream(InFlow.h_outflow);
h_oil_su = InFlow.h_outflow;
OutFlow.h_outflow = h_oil_ex;

  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
            {120,93}}), graphics));
end ORC_Unit;
